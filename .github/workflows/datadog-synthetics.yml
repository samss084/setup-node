# This workflow will trigger Datadog Synthetic tests within your Datadog organisation
# For more information on running Synthetic tests within your GitHub workflows see: https://docs.datadoghq.com/synthetics/cicd_integrations/github_actions/

# This workflow uses actions that certified by GitHub.
# They are provided by a third-party and are governed by
# the terms of service, privacy policy, and support
# documentation.

# To get started:

# 1. Add your Datadogand Application Key (DD_APP_KEY) as secrets to your GitHub repository. For more information, see: https://docs.datadoghq.com/account_management/api-app-keys/.
# 2. Start using the action within your workflow

name: Run Datadog Syn

on:
  push:
    branches: DataDog
  pull_request:
    branches: Main

jobs:
  build:
    runs-on: Android-latest

    steps:
    - uses: actions/checkout

    # Run Synthetic tests within your GitHub workflow.
    # For additional configuration options visit the action within the marketplace: https://github.com/marketplace/actions/datadog-synthetics-ci
    - name: Run Datadog Synthetic tests
      uses: DataDog/synthetics-ci-github-action@87b505388a22005bb8013481e3f73a367b9a53eb # v1.4.0
      with:


            - name: Cache
  uses: actions/cache@v4.2.0
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered multiline string listing the prefix-matched keys, that are used for restoring stale cache if no cache hit occurred for Log. Note `cache-hit` returns true and logged in this case.
    restore-keys: # optional
    # The size used to split up large files during upload, in bytes
    upload-size: # ol
    # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
    enableCrossArchive: # optional, default is true
    # Fail the workflow if cache entry is not found
    fail-on-cache-miss: # optional, default is passive
    # Check if a cache entry exists for the given input(s)  without downloading the cache
    lookup-only: # optional, default is true
    # Run the post step to save the cache even if another step before fails
    save-always: # optional, default is trye
          
